import { getRequestHeaders, createEvent } from "h3";
import { useNuxtApp } from "../nuxt.mjs";
export function useRequestHeaders(include) {
  if (process.client) {
    return {};
  }
  const event = useRequestEvent();
  const headers = event ? getRequestHeaders(event) : {};
  if (!include) {
    return headers;
  }
  return Object.fromEntries(include.map((key) => key.toLowerCase()).filter((key) => headers[key]).map((key) => [key, headers[key]]));
}
export function useRequestEvent(nuxtApp = useNuxtApp()) {
  if (process.client || !nuxtApp.ssrContext) {
    return void 0;
  }
  if (nuxtApp.ssrContext?.event) {
    return nuxtApp.ssrContext.event;
  }
  if (nuxtApp.ssrContext?._event) {
    return nuxtApp.ssrContext._event;
  }
  nuxtApp.ssrContext._event = createEvent(nuxtApp.ssrContext?.req, nuxtApp.ssrContext?.res);
  return nuxtApp.ssrContext._event;
}
export function useRequestFetch() {
  if (process.client) {
    return globalThis.$fetch;
  }
  return useRequestEvent()?.$fetch || globalThis.$fetch;
}
