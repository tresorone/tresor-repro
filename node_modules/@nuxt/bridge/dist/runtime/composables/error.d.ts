import { H3Error } from 'h3';
export declare const useError: () => import("vue").Ref<any>;
export interface NuxtError<DataT = unknown> extends H3Error<DataT> {
}
export declare const showError: <DataT = unknown>(_err: string | Error | (Partial<NuxtError<DataT>> & {
    status?: number | undefined;
    statusText?: string | undefined;
})) => NuxtError<unknown>;
/** @deprecated Use `throw createError()` or `showError` */
export declare const throwError: <DataT = unknown>(_err: string | Error | (Partial<NuxtError<DataT>> & {
    status?: number | undefined;
    statusText?: string | undefined;
})) => NuxtError<unknown>;
export declare const clearError: (options?: {
    redirect?: string;
}) => Promise<void>;
export declare const isNuxtError: (err?: string | object) => err is NuxtError<unknown>;
export declare const createError: <DataT = unknown>(err: string | Error | (Partial<NuxtError<DataT>> & {
    status?: number | undefined;
    statusText?: string | undefined;
})) => NuxtError;
