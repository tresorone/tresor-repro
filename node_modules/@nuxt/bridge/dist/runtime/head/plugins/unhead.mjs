import {
  createHead as createClientHead,
  createServerHead,
  setHeadInjectionHandler,
  Vue2ProvideUnheadPlugin
} from "@unhead/vue";
import { markRaw } from "vue";
import { renderSSRHead } from "@unhead/ssr";
import { defineNuxtPlugin, useNuxtApp } from "../../nuxt.mjs";
import metaConfig from "#build/meta.config.mjs";
export default defineNuxtPlugin((nuxtApp) => {
  const createHead = process.server ? createServerHead : createClientHead;
  const head = createHead();
  head.push(markRaw(metaConfig.globalMeta));
  nuxtApp.vueApp.use(Vue2ProvideUnheadPlugin, head);
  nuxtApp.vueApp.config.globalProperties.$head = head;
  setHeadInjectionHandler(
    // need a fresh instance of the nuxt app to avoid parallel requests interfering with each other
    () => useNuxtApp().vueApp.config.globalProperties.$head
  );
  if (process.server) {
    nuxtApp.ssrContext.renderMeta = async () => {
      const meta = await renderSSRHead(head);
      return {
        ...meta,
        bodyScriptsPrepend: meta.bodyTagsOpen,
        // resolves naming difference with NuxtMeta and Unhead
        bodyScripts: meta.bodyTags
      };
    };
  }
});
