/// <reference types="nitropack" />
import { NuxtModule } from '@nuxt/schema';

interface BridgeConfig {
  nitro: boolean
  nitroGenerator: boolean
  vite: boolean | {
    /**
     * If set to false, `@vitejs/plugin-legacy` not used.
     */
    legacy?: boolean
  }
  app: boolean | {}
  capi: boolean | {
    legacy?: boolean
  }
  /**
   * @deprecated use `imports.autoImport` instead to disable auto-importing.
   * @see {@link https://nuxt.com/docs/guide/concepts/auto-imports#disabling-auto-imports}
   */
  imports: boolean
  /** @deprecated */
  autoImports?: boolean
  transpile: boolean
  compatibility: boolean
  postcss8: boolean
  resolve: boolean
  typescript: boolean | {
    /**
     * @deprecated please use `esbuild` instead
     */
    isTSX?: boolean
    /**
     * If `vite: false`, setting `esbuild: true` will use `esbuild-loader`
     * to process `.ts`/`.tsx` files within your project.
     */
    esbuild?: boolean
  }
  meta: boolean | null
  macros: false | {
    pageMeta: boolean
  }
}

declare module '@nuxt/bridge-schema' {
  interface Nuxt2Config {
    bridge?: Partial<BridgeConfig> | false
  }
}

declare module 'nitropack' {
  interface NitroRouteConfig {
    ssr?: boolean
  }
  interface NitroRouteOptions {
    ssr?: boolean
  }
}

declare const _default: NuxtModule<BridgeConfig>;

export { _default as default };
