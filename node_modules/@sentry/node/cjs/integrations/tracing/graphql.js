Object.defineProperty(exports, '__esModule', { value: true });

const instrumentationGraphql = require('@opentelemetry/instrumentation-graphql');
const core = require('@sentry/core');
const instrument = require('../../otel/instrument.js');
const addOriginToSpan = require('../../utils/addOriginToSpan.js');

const INTEGRATION_NAME = 'Graphql';

const instrumentGraphql = instrument.generateInstrumentOnce(
  INTEGRATION_NAME,
  (_options = {}) => {
    const options = {
      ignoreResolveSpans: true,
      ignoreTrivialResolveSpans: true,
      ..._options,
    };

    return new instrumentationGraphql.GraphQLInstrumentation({
      ...options,
      responseHook(span) {
        addOriginToSpan.addOriginToSpan(span, 'auto.graphql.otel.graphql');
      },
    });
  },
);

const _graphqlIntegration = ((options = {}) => {
  return {
    name: INTEGRATION_NAME,
    setupOnce() {
      instrumentGraphql(options);
    },
  };
}) ;

/**
 * GraphQL integration
 *
 * Capture tracing data for GraphQL.
 */
const graphqlIntegration = core.defineIntegration(_graphqlIntegration);

exports.graphqlIntegration = graphqlIntegration;
exports.instrumentGraphql = instrumentGraphql;
//# sourceMappingURL=graphql.js.map
